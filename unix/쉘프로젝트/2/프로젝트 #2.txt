


################################ myshell관련 실습 #####################################################################

1. shell - process group, signal,controlling terminal 관련 설명

 - process group : myshell에서 수행되는 프로세스가 새로운 프로세스 그룹을 생성할 수 있도록 지도
 - signal : myshell 에서 제어키가 제대로 작동하지 않는 이유 설명
 - controlling terminal : 제어권 획득 및 회수 관련 설명

 - 프로젝트2_관련.ppx 를 참고
 

#####################################################################################################################




##################################### 프로젝트2 #######################################################################


|------myshell에 다음 기능을 추가-------|


	1) SIGCHLD로 자식 프로세스 wait() 시 프로세스가 온전하게 수행되도록 구현
		
	2) ^C(SIGINT), ^ \(SIGQUIT) 사용시 쉘이 종료되지 않도록, Foreground 프로세스 실행 시 SIGINT를 받으면 프로세스가 끝나는 것을 구현



|------------테스트 사항---------------|

	1) SIGCHLD로 자식 프로세스 wait()시 포그라운드 프로세스가 온전하게 수행되는 테스트

		mysh> sleep 20 &
		mysh> sleep 30 &
		mysh> sleep 50		("sleep 50"이 "sleep 20 &"과 "sleep 30 &"에 방해 받지 않고 수행되는것을 확인)
		mysh> ps -u 12345 	(ps를 통해 좀비프로세스가 없음을 확인)





	2) ^C ^\ 무시 ------------------------------------------------------------

		mysh> ^C	(무시되는것을 확인, 쉘은 종료되지 않아야 함)
		mysh>



	3) 포그라운드 프로세스 ^C 확인 -------------------------------------------

		mysh> sleep 30
		^C
		mysh>  (제어키(^C, ^\)을 받아 포그라운드프로세스 sleep이 죽는 것을 확인)





#####################################################################################################################


