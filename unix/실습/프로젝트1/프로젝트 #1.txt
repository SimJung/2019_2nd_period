


################################myshell관련 실습#####################################################################

1. makelist() 함수 설명.

 - 쉘 작성시 명령을 실행하기 위해 execv함수를 이용할것임
 - 따라서 사용자로부터 입력받은 명령라인을 vector형태로 변환해야함
 - makelist는 명령라인을 vector형태로 변환하는 함수
 - makelist()작성에 필요한 함수들은 ch05_shell2.ppx를 참고
 
2. maeklist()를 이용한 간단한 쉘작성 (simple_myshell.c 참고)

#####################################################################################################################




##################################### 프로젝트1 #######################################################################


|------myshell에 다음 기능을 추가-------|


	1) 'cd' 명령이 제대로 작동하지 않는 버그를 수정

		힌트 : chdir()의 범위는 현재 프로세스에 제한

	2) 'exit' 명령을 구현

		힌트 : fork()를 하지 않고 exit()나 return을 이용함

	3) 백그라운드 실행을 구현

		힌트1 : 명령 뒤에 &가 붙으면 백그라운드 실행
		힌트2 : 고아 프로세스의 생성원리를 이용



|------------테스트 사항---------------|

	1) "cd" ------------------------------------------------------------
		mysh> pwd
		/home/usr1		(usr1의 홈디렉토리)

		mysh> mkdir dirA

		mysh> cd dirA

		mysh> pwd		(디렉토리가 바뀌는것을 확인)
		/home/usr1/dirA 




	2) "exit" ---------------------------------------------------------
		mysh> exit 		(mysh프로세스가 종료되는것을 확인)



	3) background & foreground ----------------------------------------
		mysh> sleep 10
		
		(포그라운드이므로 쉘프롬프트가 바로 출력되지 않고 10초 후에 쉘프롬프트가 출력되는 것을 확인)

		mysh> sleep 10 &
		mysh> 
		(백그라운드이므로 쉘프롬프트가 바로 출력되는것을 확인)



	4) background & foreground 구현 이후에 다음을 테스트 --------------

		mysh> id (자신의 uid확인)
		uid=12345(s222222) gid=300(Assist)
		mysh> ps -u 12345 & (본인의 uid적을것)
		mysh> ps -u 12345 & (본인의 uid적을것)
		mysh> ps -u 12345 & 
		mysh> ps -u 12345
   		UID    PID    TTY  TIME CMD
 		10052 487414         0:00 <defunct>
 		10052 502322  pts/1  0:00 ps
 		10052 539114  pts/1  0:00 ksh
 		10052 549212  pts/1  0:00 a.out

		[고찰] 좀비프로세스가 생기는 이유에 대하여 보고서에 작성할것


	5) 백그라운드 기다리는 문제 테스트

		mysh> sleep 10 &
		mysh> sleep 20 &
		mysh> ps
		mysh> (백그라운드를 기다라지 않고 바로 쉘프롬프트가 출력되는가?)

		[고찰] 5번 테스트의 문제점이 무엇인지 지적하고 문제점을 해결하기 위한 방법에 대해 보고서에 작성할것


#####################################################################################################################